<%- include('partial/plansheader'); -%>
    <br> <br> <br><br>

    <div id="content"></div>
    <div class="container" style="border-top-left-radius: 30px;
    border-top-right-radius: 30px;
    
    border-bottom-left-radius: 30px;
    border-bottom-right-radius: 30px;background-color: whitesmoke;" >
        <div style="display: block;">
        <h1><strong>STANDARD PLAN</strong></h1>

        <h4>Please confirm your deposit</h4>
        </div> </div>
        <br> <br>
    <div class="containers">    
    <div class="container"  >
      <div>
        <form >
          <center>
            <h3> <strong>Order Summary</h3></strong>
            <h6 id="plan"><strong>STANDARD</strong></h6>
            <h6><strong>Profit:</strong> 25% every 48 hours </h6>
            <h6><strong>Principal return:</strong> Yes </h6>
            <h6><strong>Minimum deposit:</strong> $1,600.00 </h6> 
            <h6><strong>Maximum deposit:</strong> $5,000.00 </h6>
            <h6><strong>Referral bonus:</strong>15% </h6>
            <h6><strong>Deposit fee:</strong> 0.00% </h6> <br>

            <div class="containerss" style="text-align: center;justify-content: center;padding-top: 20px">
            <h6> Enter amount($)</h6>
            <textarea id="amountTextArea"></textarea> <br><br>
            <h6>Copy wallet address</h6>

            <textarea id="walletTextArea" readonly>bc1qvwrxry6wu7jtk24029wv0u4qferyxzgva88kwl</textarea>
            <br>
            <button id="copyButton">Copy</button> <br><br>
            
            
            <h6>Transaction ID(required):</h6>
            <textarea id="transactionIdTextArea"></textarea> <br>

            <button id="submitButton">Submit</button> <br><br>
        </form>
    </div><br>
    </div>
  </div>
</div>

<div id="formMessage" class="hidden">
  <div class="message-box">
      <p id="formMessageText">Message goes here...</p>
      <button id="close-popout">Close</button>
  </div>
</div>

<!-- footer -->
<%- include('partial/footer'); -%>
<!-- footer -->


<style>
  @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap');

body{
  font-family: 'Quicksand', sans-serif;
}
    .container {
      text-align: center;
    }
    #walletTextArea {
      width: 300px;
      height: 30px;
      resize: none;
    }
    #amountTextArea {
      width: 300px;
      height: 30px;
      resize: none;
    }
    #transactionIdTextArea {
      width: 300px;
      height: 30px;
      resize: none;
    }
    #copyButton {
      padding: 10px 20px;
      /* border: 2px solid estate; */
      background-color: gold;
      /* color: #3b288f; */
      border-top-left-radius: 10px;
        border-top-right-radius: 10px;

     border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
    }

    #copyButton:hover{
        background-color: #3b288f;
        color: whitesmoke;
    }

    #submitButton {
      padding: 10px 20px;
      /* border: 2px solid estate; */
      background-color: gold;
      /* color: #3b288f; */
      border-top-left-radius: 10px;
        border-top-right-radius: 10px;

     border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
    }

    #submitButton:hover{
        background-color: #3b288f;
        color: whitesmoke;
    }
    .containerss{
      border-top-left-radius: 30px;
      border-top-right-radius: 30px;
      
      border-bottom-left-radius: 30px;
      border-bottom-right-radius: 30px;
      background-color: whitesmoke;
      padding-left: 20px;
      padding-right: 20px;
    }
    /* Existing styles */

#formMessage.hidden {
display: none;
}

#formMessage {
position: fixed;
top: 0;
left: 0;
width: 100vw;
height: 100vh;
background-color: rgba(0, 0, 0, 0.301);
display: flex;
padding: 10px;
border-radius: 4px;
margin: 10px 0;
text-align: center;
align-items: center;
justify-content: center;
z-index: 1000;
transition: opacity 0.3s ease;
overflow: hidden;
}

.message-box {
background: rgba(255, 255, 255, 0.9);
padding: 20px;
border-radius: 10px;
text-align: center;
box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
}

/* Blurring content when the formMessage is shown */
.content-blur {
filter: blur(5px);
position: relative;
z-index: 500;
opacity: 1;
}

.hidden{
display: none;
}

#close-popout{
      padding: 10px 20px;
      /* border: 2px solid estate; */
      background-color: gold;
      /* color: #3b288f; */
      border-top-left-radius: 10px;
        border-top-right-radius: 10px;

     border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}

    @media screen and (max-width: 1200px) {
      .containers .container{
        text-align: left;
      }
    }
  </style>
<script>
    const formMessage = document.querySelector('#formMessage');
    const formMessageText = document.querySelector('#formMessageText');
    const closePopout = document.getElementById('close-popout');
    const content = document.getElementById('content');
    const walletTextArea = document.getElementById('walletTextArea');
    const copyButton = document.getElementById('copyButton');
    const amountTextArea = document.getElementById('amountTextArea');
    const submitButton = document.getElementById('submitButton');
    const planElement = document.getElementById('plan')

    document.addEventListener('DOMContentLoaded', function() {
      const formMessage = document.querySelector('#formMessage');
      const formMessageText = document.querySelector('#formMessageText');
      const closePopout = document.getElementById('close-popout');
      const content = document.getElementById('content');

      function showFormMessage(message, isError = false) {
        if (formMessage && content) {
            formMessageText.textContent = message;
            formMessage.classList.remove('hidden');
            content.classList.add('content-blur'); // Apply blur to the content
          } else {
              console.error("Element with ID 'formMessage' not found.");
          }
      }

      closePopout.addEventListener('click', () => {
        if (formMessage && content) {
          formMessage.classList.add('hidden');
          content.classList.remove('content-blur'); // Remove blur from the content
          
        }
   
      });

      copyButton.addEventListener('click', async (e) => {
        e.preventDefault();
        walletTextArea.select();
        document.execCommand('copy');
        window.getSelection().removeAllRanges();
        showFormMessage('Copied to clipboard', true);
      });

      // Example usage in your submitButton click event
      submitButton.addEventListener('click', async (e) => {
          e.preventDefault();
          const plan = planElement ? planElement.textContent.trim() : '';
          const Amount = amountTextArea.value.trim();
          const newAmount = parseInt(Amount);

          if (newAmount < 1600 || newAmount > 5000) {
              showFormMessage('Deposit must be between $1,600 & $5,000', true);
              return;
          }

          const transactionId = transactionIdTextArea.value.trim();

          if (newAmount === '' || transactionId === '') {
              showFormMessage('Please fill in the required fields appropriately.', true);
              return;
          }

          try {
              const res = await fetch('/api/deposit/payment', {
                  method: 'POST',
                  body: JSON.stringify({ plan, amount: newAmount, transactionId }),
                  headers: {
                      'Content-Type': 'application/json',
                  }
              });

              if (res.ok) {
                  const newDeposit = await res.json();
                  console.log('Deposit made:', newDeposit);
                  showFormMessage(newDeposit.message, true)
                  setTimeout(() => window.location.href = '/dashboard', 1000)
                  //window.location.href = '/success';
              } else {
                  const errorData = await res.json();
                  console.error('Error making deposit:', errorData);
                  showFormMessage(errorData.message, true);
              }
          } catch (error) {
              console.error('Error making deposit:', error);
              showFormMessage('An unexpected error occurred. Please try again later.', true);
          }
      });
});


</script>
</body>
</html> 