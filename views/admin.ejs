<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/fontawesome.min.css">
    <title>Eternal trading</title>
</head>

<body>
    <header class="primary-header flex">

        <div class="logo"> <img src="/ASSETS/WHITE.png" alt="Logo" class="imgLogo"></div>

        <button class="mobile-nav-toggle" aria-controls="primary-navigation" aria-expanded="false">
            <span style="font-size:30px;cursor:pointer;" style="overflow: hidden;">â˜°</span>

        </button>

        <!--navbar-->
        <nav>

            <ul id="primary-navigation" data-visible='false' class="primary-navigation flex">
                <li class="active">
                    <a href="/users"> <span aria-hidden="true"></span>Client</a>
                </li>
                <li>
                    <a href="/contact">
                        <span aria-hidden="true"></span>Withdrawal</a>
                </li>
                <li>
                    <a href="/trans">
                        <span aria-hidden="true"></span>Transactions</a>
                </li>
                <li>
                    <a href="#">
                        <span aria-hidden="true"></span>Update</a>
                </li>
                <li>
                    <a href="/adminSignUser">
                        <span aria-hidden="true"></span>Create new user</a>
                </li>
        </nav>
    </header>
    <br>
                <div class="head" style="background-color: #f6f6f8; padding: 20px 20px;">
                    <span style="font-size: 3.5vh; cursor: pointer; color: rgb(5, 5, 5);" class="nav3">WITHDRAWAL ALERTS</span>
                </div>
                <!-- Withdrawal Section -->

                    <section class="transaction-history">
                        <table id="transaction-history-table">
                            <tr>
                               <th>Username</th> 
                                <th class="transaction-id-column">Wallet Address</th>
                                <th>Action</th>
                              </tr>
                              <tbody id="withdrawal-table"></tbody>
                        </table>
                    </section>

                    <br>
                <div class="head" style="background-color: #fcfcfd; padding: 20px 20px;">
                    <span style="font-size: 3.5vh; cursor: pointer; color: rgb(7, 7, 7);" class="nav3">TRANSACTION HISTORY</span>
                </div>
                <section class="transaction-history">
                    <table id="transaction-history-table">
                          <tr>
                            <th class="transaction-id-column">Transaction ID</th>
                            <th>Amount</th>
                            <th>Type of Plan</th>
                            <th>Action</th>
                          </tr>
                          <tbody id="deposit-table"></tbody>
                    </table>
                </section>
            </section>

            <form action="/withdrawUpdate">
                <h2>Withdrawal confirmation</h2>
                <label for="userName">Username</label>
                <input type="text" name="userName"  />
                <label for="amount">Amount</label>
                <input type="text" name="amount"  />
                <label for="batch_id">Batch Id</label>
                <input type="text" name="batch_id"  />
                <button>send</button>
              </form>

    <script>
        const primaryNav = document.querySelector(".primary-navigation");
        const navToggle =  document.querySelector(".mobile-nav-toggle");

        navToggle.addEventListener("click", () => {
            const visibility = primaryNav.getAttribute("data-visible");

            if(visibility === "false") {
                primaryNav.setAttribute("data-visible", true);
            } else if (visibility === "true"){
                primaryNav.setAttribute("data-visible", false);  
            }
        }) 

        // Client-side JavaScript (AJAX) for Deposit Data
        const depositXhr = new XMLHttpRequest();
        depositXhr.open('GET', '/api/admin/getDeposit', true);

        depositXhr.onload = function() {
        if (depositXhr.status >= 200 && depositXhr.status < 400) {
            try {
            const depositResponse = JSON.parse(depositXhr.responseText);
            const depositData = depositResponse.data;
            if (Array.isArray(depositData)) {
                renderDepositData(depositData);
            } else {
                console.error('Invalid deposit response format');
            }
            } catch (error) {
            console.error('Error parsing deposit JSON:', error.message);
            }
        } else {
            console.error('Failed to fetch deposit data from the server');
        }
        };

        depositXhr.onerror = function() {
        console.error('Failed to fetch deposit data from the server');
        };

        depositXhr.send();

        function renderDepositData(depositData) {
        const depositTable = document.getElementById('deposit-table');
        depositTable.innerHTML = '';

        depositData.forEach(deposit => {
            const row = document.createElement('tr');

            const transactionIdCell = document.createElement('td');
            transactionIdCell.textContent = deposit.transactionId;

            const amountCell = document.createElement('td');
            amountCell.textContent = deposit.amount;

            const planCell = document.createElement('td');
            planCell.textContent = deposit.plan;

            const actionCell = document.createElement('td');
            const verifyButton = document.createElement('button');
            verifyButton.textContent = 'Verify Plan';
            verifyButton.classList.add('verify-button');
            verifyButton.addEventListener('click', function() {
            // Add verification logic for deposit here
            //send a POST request to /api/verifyDeposit
            fetch('/api/admin/verify-deposit', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({}),
                })
                .then(response => response.json())
                .then(data => {
                    //to handle the response data as needed
                    console.log(data);
                    alert('Payment confirmed ')
                })
                .catch(error => {
                    console.error('Error:', error);
                })
            // alert('Deposit verified for transaction ID: ' + deposit.transactionId);
            });

            actionCell.appendChild(verifyButton);

            row.appendChild(transactionIdCell);
            row.appendChild(amountCell);
            row.appendChild(planCell);
            row.appendChild(actionCell);

            depositTable.appendChild(row);
        });
        }

        // Client-side JavaScript (AJAX) for Withdrawal Data
        const withdrawalXhr = new XMLHttpRequest();
        withdrawalXhr.open('GET', '/api/withdrawal/listWithdrawal', true);

        withdrawalXhr.onload = function() {
        if (withdrawalXhr.status >= 200 && withdrawalXhr.status < 400) {
            try {
            const withdrawalResponse = JSON.parse(withdrawalXhr.responseText);
            const withdrawalData = withdrawalResponse.withdraw;
            if (Array.isArray(withdrawalData)) {
                renderWithdrawalData(withdrawalData);
            } else {
                console.error('Invalid withdrawal response format');
            }
            } catch (error) {
            console.error('Error parsing withdrawal JSON:', error.message);
            }
        } else {
            console.error('Failed to fetch withdrawal data from the server');
        }
        };

        withdrawalXhr.onerror = function() {
        console.error('Failed to fetch withdrawal data from the server');
        };

        withdrawalXhr.send();

        function renderWithdrawalData(withdrawalData) {
        const withdrawalTable = document.getElementById('withdrawal-table');
        withdrawalTable.innerHTML = '';

        withdrawalData.forEach(withdrawal => {
            const row = document.createElement('tr');

            const usernameCell = document.createElement('td');
            usernameCell.textContent = withdrawal.user.userName;

            const walletAddressCell = document.createElement('td');
            walletAddressCell.textContent = withdrawal.walletAddress;

            const actionCell = document.createElement('td');
            const verifyButton = document.createElement('button');
            verifyButton.textContent = 'Verify Withdrawal';
            verifyButton.classList.add('verify-button');
            verifyButton.addEventListener('click', function() {
            // Add verification logic for withdrawal here
            //send a POST request to /api/verifyDeposit
            fetch('/api/withdrawal/verifyWithdrawal', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({}),
                })
                .then(response => response.json())
                .then(data => {
                    //to handle the response data as needed
                    console.log(data);
                    alert('Withdrawal Processing')
                })
                .catch(error => {
                    console.error('Error:', error);
                })
            // alert('Withdrawal verified for transaction ID: ' + withdrawal.transactionId);
            });

            actionCell.appendChild(verifyButton);

            row.appendChild(usernameCell);
            row.appendChild(walletAddressCell);
            row.appendChild(actionCell);

            withdrawalTable.appendChild(row);
        });
        }

        //withdrawal confirmation
        const form = document.querySelector('form');
  

        form.addEventListener('submit', async (e) => {
            e.preventDefault();

            // get values
            const userName= form.userName.value;
            const amount= form.amount.value;
            const batch_id= form.batch_id.value;
            const newAmount = parseInt(amount)

            try {
            const res = await fetch('/api/admin/withdrawUpdate', { 
                method: 'PUT', 
                body: JSON.stringify({ userName, amount:newAmount, batch_id }),
                headers: {'Content-Type': 'application/json'}
            });
            const data = await res.json();
            const token = data.token;
            console.log(data);

            if (res.ok) {
                console.log(data);
                    alert('Withdrawal confirmed ')
            }

            }
            catch (err) {
            console.log(err);
            }
        });
</script>
</body>
<style>
/* google fonts */
@import url('https://stackpath.bootstrapcdn.com-awesome/4.7.0/css-awesome.min.css');

    * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    position: relative;
    background-position: center;
    background-size: cover;
    background-color: lavender;
    color: #fff;
    max-width: 100%;
    max-height: 100vh;
    overflow-x: hidden;
    font-family: 'Quicksand', sans-serif;
}

a {
    color: #fff;
    text-decoration: none;
}

.flex {
    display: flex;
    gap: var(--gap, 1rem);
}

.primary-header {
    align-items: center;
    justify-content: space-between;
    background-color: #3b288f;
}

.mobile-nav-toggle {
    display: none;
}

.primary-navigation {
    list-style: none;
    padding: 0;
    margin: 0;

    background: hsl (0 0% 100% / 0.1);
    backdrop-filter: blur(1rem);
}

.primary-navigation a {
    text-decoration: none;
}

.primary-navigation a>[aria-hidden="true"] {
    font-weight: 700;
    margin-inline-end: 0.75em;
}



@supports (backdrop-filter: blur(1rem)) {
    .primary-navigation {
        background: hsl (0 0% 100% / 0.5);
        backdrop-filter: blur(0.2rem);
    }


}

nav {
    padding: 2vw;
    font-size: 1.5vw;

}

nav a {
    color: #fff;
}

.imgLogo {
    width: 15rem;
    filter: grayscale(100%);
    -webkit-filter: grayscale(100%);
    filter: brightness(0) invert(1);
    /* border: 2px solid #fff; */
}

.transaction-alerts,
.transaction-history {
    margin-bottom: 20px;
    padding: 20px;
    background-color: #f5f4f8;
    border: 1px solid #050408;
    border-radius: 5px;
    overflow-x: auto; /* Add this line to enable horizontal scrolling */
}

/* Add or modify this within your existing style */
table #transaction-history-table {
    width: 100%; /* Set a suitable width */
    table-layout:auto; /* Prevent the table from expanding beyond its specified width */
    color: #050505;
}
        .admin-navbar {
            display: flex;
            justify-content: space-around;
            margin-bottom: 20px;
        }

        button {
            background-color: black;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        button:hover {
            background-color: #333;
        }

        a {
            color: #ffffff;
            text-decoration: none;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }

        th,
        td {
            border: 1px solid #070505;
            padding: 8px;
            text-align: left;
            color: #050505;
        }

        th {
            background-color: #f2f2f5;
            color: #050505;
        }

        .verify-button {
            background-color: #050507;
            color: white;
            padding: 8px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .verify-button:hover {
            background-color: #573fcf;
        }

        h1 {
            text-align: center;
        }

       /* .head {
            border-top-left-radius: 30px;
            border-top-right-radius: 30px;
            border-bottom-left-radius: 30px;
            border-bottom-right-radius: 30px;
        }*/

        /* Style for the withdrawal section */
        .withdrawal-section {
            padding: 20px;
            border: 1px solid #ccc;
            margin-top: 20px;
        }

        form h2{
            color: #fff;
            font-size: 2.4vw;
            font-weight: 900;
            margin-bottom: 40px;
        }
form{
  width: 50%;
  margin: 0 auto;
  padding: 30px;
  box-shadow: 1px 2px 3px rgba(0,0,0,0.1);
  border-radius: 10px;
  background: #573fcf;
}
input{
  padding: 10px 12px;
  border-radius: 4px;
  border: 1px solid #ddd;
  font-size: 1em;
  width: 100%;
}
label{
    color: #fff;
  display: block;
  margin: 20px 0 10px;
}
button{
  margin-top: 30px;
 /* border-radius: 36px;
  /*background: #FEE996;*/
  border:0;
  text-transform: uppercase;
  font-weight: 700;
  font-size: 0.8em;
  display: block;
  padding: 10px 16px;
  letter-spacing: 2px;
}
/*media query screen */
@media (min-width:320px) and (max-width: 768px) {

    body,
    html {
        position: relative;
        background-position: center;
        background-size: cover;
        background-color: #f7f4f4;
        color: #fafafa;
        max-width: 100%;
        max-height: 100vh;
        overflow-x: hidden;
        font-family: Georgia, 'Times New Roman', Times, serif;
    }

    .primary-header {
        align-items: center;
        justify-content: space-evenly;
        background-color: #3b288f;
    }

    .primary-navigation {
        --gap: 2em;

        position: fixed;
        z-index: 1000;
        inset: 0 0 0 30%;

        flex-direction: column;
        padding: min(30vh, 10rem) 2em;

        background: #573fcf;
       /* backdrop-filter: blur(5rem);*/

        transform: translateX(100%);


    }

    .primary-navigation[data-visible="true"] {
        transform: translateX(0%);
    }

 
    .mobile-nav-toggle {
        display: block;
        position: fixed;
        z-index: 9999;
        background-color: transparent;
        border: teal;
        color: #fff;
        background-image: url("https://www.flaticon.com/premium-icon/navigation_2811759");
       /* width: 3rem;
        height: 2rem;*/

        aspect-ratio: 3;
        /*top: 5rem;*/
        right: 2rem;
    }

    nav li {
        font-size: 5vw;
        padding: 0;
    }

    nav a {
        color: #050505;
    }

        .imgLogo {
        width: 10rem;
        filter: grayscale(100%);
        -webkit-filter: grayscale(100%);
        filter: brightness(0) invert(1);
        /* border: 2px solid #fff; */
    }

    form h2{
            color: #fff;
            font-size: 1em;
            font-weight: 900;
            margin-bottom: 40px;
        }
form{
  width: 100%;
  margin: 0 auto;
  padding: 30px;
  box-shadow: 1px 2px 3px rgba(0,0,0,0.1);
  border-radius: 10px;
  background: #573fcf;
}
input{
  padding: 10px 12px;
  border-radius: 4px;
  border: 1px solid #ddd;
  font-size: 1em;
  width: 100%;
}
label{
    color: #ffff;
  display: block;
  margin: 20px 0 10px;
}
button{
  margin-top: 30px;
 /* border-radius: 36px;
  /*background: #FEE996;*/
  border:0;
  text-transform: uppercase;
  font-weight: 700;
  font-size: 0.8em;
  display: block;
  padding: 10px 16px;
  letter-spacing: 2px;
}
}
</style>
</html>